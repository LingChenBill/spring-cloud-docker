server:
  port: 8040
spring:
  application:
    name: micro-gateway-zuul-file-upload
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
# zuul连接超时配置。
zuul:
  host:
    connect-timeout-millis: 10000
    socket-timeout-millis: 60000
# 上传大文件得将超时时间设置长一些，否则会报超时异常。以下几行超时设置来自http://cloud.spring.io/spring-cloud-static/Camden.SR3/#_uploading_files_through_zuul
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000
# hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds: 60000
ribbon:
  ConnectTimeout: 12000
  ReadTimeout: 60000
## -----路由前缀。
#zuul:
#  prefix: /user
#  strip-prefix: false
#  routes:
#    user-route:
#      # http://localhost:8040/user/micro-consumer-movie-ribbon/1
#      # 会被转发到http://localhost:8040/micro-consumer-movie-ribbon/user/1
#      service-id: micro-consumer-movie-ribbon
#      path: /user/**
## -----同时指定path和URL,并且不破坏Zuul的Hystrix,Ribbon
#zuul:
#  routes:
#    user-route:
#      service-id: micro-provider-user
#      path: /user/**
## 为Ribbon禁用Eureka.
#ribbon:
#  eureka:
#    enabled: false
#micro-provider-user:
#  ribbon:
#    listOfServers: localhost:8000,localhost:8001
## -----同时指定path和URL。这种方式不会作为HystrixCommand执行，同时也不能使用Ribbon来负载均衡多个URL。
#zuul:
#  routes:
#    user-route:
#      # 指定的URL。
#      url: http://localhost:8000/
#      # url对应的路径。
#      path: /user/**
## -----同时指定微服务的serviceId和对应路径。
#zuul:
#  routes:
#    # user-route只是给路由一个名称，可以任意起名。
#    user-route:
#      service-id: micro-consumer-movie-ribbon
#      # service-id对应的路径。
#      path: /user/**
## -----忽略所有微服务，只路由指定微服务。
#zuul:
#  # 使用'*'可忽略所有微服务。
#  ignored-services: '*'
#  routes:
#    micro-provider-user: /user/**
#zuul:
#  # 自定义指定微服务的访问路径。
#  routes:
#    # 访问----http://localhost:8040/user/user/1
#    micro-consumer-movie-ribbon: /user/**
#  # 忽略指定微服务。
#  ignored-services: micro-consumer-movie-ribbon
